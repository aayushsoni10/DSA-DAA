class Solution {
public:
    string minWindow(string s, string t) {
        int l1=s.length();
        int l2=t.length();
        if(l1<l2)
            return "";
        int hash_s[256]={0};
        int hash_t[256]={0};
        for(int i=0;i<l2;i++)
            hash_t[t[i]]++;
        int start=0,start_index=-1,count=0,min_len=INT_MAX;
        for(int j=0;j<l1;j++){
            hash_s[s[j]]++;
            if(hash_t[s[j]]!=0 && hash_s[s[j]]<=hash_t[s[j]])
                count++;
            if(count==l2){
                while(hash_s[s[start]]>hash_t[s[start]] || hash_t[s[start]]==0){
                    if(hash_s[s[start]]>hash_t[s[start]]){
                        hash_s[s[start]]--;
                    }
                    start++;
                }
                int len_w=j-start+1;
                if(min_len>len_w){
                    min_len=len_w;
                    start_index=start;
                }
            }
        }
        if(start_index==-1)
            return "";
        return s.substr(start_index,min_len);
    }
};