#include<bits/stdc++.h>
using namespace std;
string s;
map<int,char> m;
vector<int> adj[10];
vector<int> path;
bool dfs(int u,int ind){
 if(ind==s.size()) return 1;
 bool ans=0;
 for(int v:adj[u]){
  if(m[v]==s[ind]){
   if(dfs(v,ind+1)){
    ans=1;
    path.push_back(v);
    break;
   }
  }
 }
 return ans;
}
void pre(){
 vector<char> v={'A','B','C','D','E'};
 for(int i=0;i<10;i++) m[i]=v[i%5];
 adj[0]={1,4,5};
 adj[1]={0,6,2};
 adj[2]={1,7,3};
 adj[3]={2,4,8};
 adj[4]={3,0,9};
 adj[5]={0,7,8};
 adj[6]={1,8,9};
 adj[7]={5,9,2};
 adj[8]={3,5,6};
 adj[9]={6,7,4};
 for(int i=0;i<10;i++) sort(adj[i].begin(),adj[i].end());
}
int main(){
 int t;
 cin>>t;
 pre();
 while(t--){
  cin>>s;
  bool ok=0;
  for(int i=0;i<10;i++){
   path.clear();
   if(m[i]==s[0]&&dfs(i,1)){
    ok=1;
    reverse(path.begin(),path.end());
    cout<<i;
    for(int v:path) cout<<v;
    cout<<endl;
    break;
   }
  }
  if(!ok) cout<<-1<<endl;
 }
 return 0;
}