double Solution::findMedianSortedArrays(const vector<int> &A, const vector<int> &B) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    if(A.size()>B.size())
        return findMedianSortedArrays(B, A);
    int t = (A.size()+B.size());
    int s=0;
    int e=A.size();
    while(s<=e){
        int m=(s+e)/2;
        int np = (t+1)/2 - m;
        if(m>0 && np<B.size() && /A[m-1]>B[np])
            e = m-1;
        else if(m<A.size() && np>0 && A[m]<B[np-1]){
            s=m+1;
        }else{
            int x1=0, x2=0;
            if(m==0){
                x1 = B[np-1];
            }else if(np==0)
                x1 = A[m-1];
            else
                x1 = max(A[m-1], B[np-1]);
            if ((t) % 2 == 1) {
                return 1.0 * x1;
            }
            if(m==A.size()){
                x2 = B[np];
            }else if(np==B.size())
                x2 = A[m];
            else
                x2 = min(A[m], B[np]);
            return 1.0 * (x1+x2)/2;
        }
    }
    return -1;
}