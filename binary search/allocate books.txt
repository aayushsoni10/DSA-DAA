/*N number of books are given. 
The ith book has Pi number of pages. 
You have to allocate books to M number of students so that maximum number of pages alloted to a student is minimum. A book will be allocated to exactly one student. Each student has to be allocated at least one book. Allotment should be in contiguous order, for example: A student cannot be allocated book 1 and book 3, skipping book 2.

NOTE: Return -1 if a valid assignment is not possible

Input:

List of Books
M number of students
Your function should return an integer corresponding to the minimum number.

Example:

P : [12, 34, 67, 90]
M : 2

Output : 113
*/
int valid(vector<int> &A,int B,int mid){
    long count=0;
    long sum=0;
    for(int i=0;i<A.size();i++){
        if(A[i]>mid)
            return 0;
        if(count>=B)
            return 0;
        if(sum+A[i]<=mid)
            sum=sum+A[i];
        else{
            count++;
            sum=0;
            i--;
        }
    }
    return 1;
}
int Solution::books(vector<int> &A, int B) {
    long x=0;
    for(int i=0;i<A.size();i++)
        x+=A[i];
    long s=0;
    if(B>A.size())
        return -1;
    long e=x;
    while(s<e){
        long mid=(s+e)/2;
        if(valid(A,B,mid)){
            e=mid-1;
        }else
            s=mid+1;
    }
    if(valid(A,B,s))
        return s;
    return s+1;
}