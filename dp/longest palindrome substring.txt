string longestPalindrome(string s) {
        int n=s.length();
        vector<vector<int>> arr(n,vector<int>(n,0));
        int max_len=1;
        int start=0;
        for(int i=0;i<n;i++)
            arr[i][i]=1;
        for(int i=0;i<n-1;i++){
            if(s[i]==s[i+1]){
                arr[i][i+1]=1;
                max_len=2;
                start=i;
            }
        }
        for(int k=3;k<=n;k++){
            for(int i=0;i<n-k+1;i++){
                int j=i+k-1;
                if(arr[i+1][j-1]==1 && s[i]==s[j]){
                    arr[i][j]=1;
                    max_len=k;
                    start=i;
                }
            }
        }
        string s1="";
        for(int i=start;i<start+max_len;i++)
            s1.push_back(s[i]);
        return s1;
    }